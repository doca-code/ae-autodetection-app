{
 "Resources": {
  "AEModelingAEModelingServiceRoleB9E24156": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "lambda.amazonaws.com",
         "s3.amazonaws.com",
         "sagemaker.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSCodeCommitPowerUser"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSageMakerFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ],
    "RoleName": "AEModeling-ServiceRole"
   },
   "Metadata": {
    "aws:cdk:path": "ae/AEModeling/AEModeling-ServiceRole/Resource"
   }
  },
  "AEModelingAEModelingLifeCycleConfig9C22A3C3": {
   "Type": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
   "Properties": {
    "NotebookInstanceLifecycleConfigName": "ae-config",
    "OnCreate": [
     {
      "Content": {
       "Fn::Base64": {
        "Fn::Join": [
         "",
         [
          "\n                    #!/bin/bash\n                    set -ex\n\n                    BUCKET=\"",
          {
           "Fn::ImportValue": "ae-bucket:ExportsOutputRefAEModelingBucketFA1C16C5F6E9B7D2"
          },
          "\"\n                    PREFIX=\"sagemaker\"\n                    DIRECTORY=\"ae_detection\"\n\n                    cd home/ec2-user/SageMaker && mkdir -p $DIRECTORY\n                    aws s3 cp s3://$BUCKET/$PREFIX /home/ec2-user/SageMaker/$DIRECTORY --recursive\n                    sudo chown \"ec2-user\":\"ec2-user\" /home/ec2-user/SageMaker/$DIRECTORY --recursive\n                "
         ]
        ]
       }
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ae/AEModeling/AEModeling-LifeCycleConfig"
   }
  },
  "AEModelingAEModelingnotebookD0EA3BB2": {
   "Type": "AWS::SageMaker::NotebookInstance",
   "Properties": {
    "InstanceType": "ml.t2.medium",
    "LifecycleConfigName": "ae-config",
    "NotebookInstanceName": "AdverseEventDetectionModeling",
    "RoleArn": {
     "Fn::GetAtt": [
      "AEModelingAEModelingServiceRoleB9E24156",
      "Arn"
     ]
    },
    "RootAccess": "Enabled"
   },
   "Metadata": {
    "aws:cdk:path": "ae/AEModeling/AEModeling-notebook"
   }
  },
  "TweetsWrittenByLambdaTweetsA346C16F": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "N"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "ae_tweets_ddb"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ae/TweetsWrittenByLambda/Tweets/Resource"
   }
  },
  "TweetsWrittenByLambdaLambdaServiceRole5CC28C95": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "comprehendmedical.amazonaws.com",
         "lambda.amazonaws.com",
         "sagemaker.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "LambdaServiceRoleForDDB"
   },
   "Metadata": {
    "aws:cdk:path": "ae/TweetsWrittenByLambda/LambdaServiceRole/Resource"
   }
  },
  "TweetsWrittenByLambdaLambdaServiceRoleDefaultPolicyA1230E0C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:ListStreams",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TweetsWrittenByLambdaTweetsA346C16F",
         "StreamArn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TweetsWrittenByLambdaTweetsA346C16F",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "ae-bucket:ExportsOutputFnGetAttAEModelingBucketFA1C16C5ArnE0F4D119"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "ae-bucket:ExportsOutputFnGetAttAEModelingBucketFA1C16C5ArnE0F4D119"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TweetsWrittenByLambdaLambdaServiceRoleDefaultPolicyA1230E0C",
    "Roles": [
     {
      "Ref": "TweetsWrittenByLambdaLambdaServiceRole5CC28C95"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ae/TweetsWrittenByLambda/LambdaServiceRole/DefaultPolicy/Resource"
   }
  },
  "TweetsWrittenByLambdaInferenceHandler2B94B46D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-west-1"
     },
     "S3Key": "9f8b557b9a7698ae0d395eb4fffc299c52b51289fb7072c7242a116388f04d4e.zip"
    },
    "Environment": {
     "Variables": {
      "PROJECT_BUCKET_NAME": {
       "Fn::ImportValue": "ae-bucket:ExportsOutputRefAEModelingBucketFA1C16C5F6E9B7D2"
      },
      "AE_THRESHOLD": "0.6",
      "ENDPOINT_NAME": "HF-BERT-AE-model"
     }
    },
    "Handler": "inference.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "TweetsWrittenByLambdaLambdaServiceRole5CC28C95",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "TweetsWrittenByLambdaLambdaServiceRoleDefaultPolicyA1230E0C",
    "TweetsWrittenByLambdaLambdaServiceRole5CC28C95"
   ],
   "Metadata": {
    "aws:cdk:path": "ae/TweetsWrittenByLambda/InferenceHandler/Resource",
    "aws:asset:path": "asset.9f8b557b9a7698ae0d395eb4fffc299c52b51289fb7072c7242a116388f04d4e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TweetsWrittenByLambdaInferenceHandlerDynamoDBEventSourceaeTweetsWrittenByLambdaTweets1A0589F4F699588B": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 10,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "TweetsWrittenByLambdaTweetsA346C16F",
      "StreamArn"
     ]
    },
    "FunctionName": {
     "Ref": "TweetsWrittenByLambdaInferenceHandler2B94B46D"
    },
    "MaximumRetryAttempts": 10000,
    "StartingPosition": "LATEST"
   },
   "Metadata": {
    "aws:cdk:path": "ae/TweetsWrittenByLambda/InferenceHandler/DynamoDBEventSource:aeTweetsWrittenByLambdaTweets1A0589F4/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/71VXU/bMBT9LeRxCpk6XibeAoSpGpSqrcQDQtWNfZt6dezIdmAh6n/ftRu3fGma2LQn2+d+netznXzJRl9H2egIHu0x45tjKcqsnztgm5SgZS+gzvqZlnjXJ2BtWyM/65LTPmmMUEw0IHPGdKtccpp8StLBxwfkzAmtArxNE0PIBGoczpSM82tQUCGfaikY5aQK9XMkN0P0/X/x/8fNLfQ0JjkQGEo5ut/1WEmhcG+jyD8w/j7vR6336flK+bbSHezr7akstLe8YfgW5pzmxmGNytkXZf8SDux2xLapJf1q2KDJekIn2mGp9WasrAPF8EqskHVM4rlWK1Gl77hsU94pqDWnOV9AGQa7AeOEF/Q7BvlV1DJNXNf47STIjMDPoQEmXDeYDdb64XCbCUfrjO7IQitC7UOL22U+uVjeXF0sx9f5t2JO1kcjHL7K5TybwxiFtgPDbSqhLjlk/WWrwuARZ1QPwmjlLypyCXqELdM8bteguEQTfWiYxctBLZ4nCso/U/QjxkA8Mk2LBzLPdWsYXkPTCFUReQemwsgbDx7xSaZJjc4IZnc6DlgJjq3n4im2VgqLzJ159EYVxujYJSlNgqpqqq0Y3ulVvijmi6BYo80uaExzdglCtgZtLAs/g4mCb4Xi+vGAz5Bpw/MK99I70+WOcjQuhtMggZQoxRP4upfA3J6UP4ZaUe62LuXrOqi84Hw4rYR0aOyLU6GY6ZrD1yfc9ttLppdysqTvFTqb5X6hc3bWsg1S7xbvSMMZ2hARlQvqpcGZ3mAVkkw7t9bq80k2op/E6OiHFeJ4mKFstlt/AXxvJpNCBgAA"
   },
   "Metadata": {
    "aws:cdk:path": "ae/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}